#!/usr/bin/python3
# _*_ coding: utf-8 _*_
#
# Copyright (C) 2023 - 2023 pgl, Inc. All Rights Reserved
#
# @Time    : 2023/02/12 20:53
# @Author  : pgl
# @File    : 03_命名规则及格式化.py
# @IDE     : PyCharm
#
# 编码规范：PEP8 (Python Enhancement Proposal)
# 参考文档：https://www.runoob.com/w3cnote/google-python-styleguide.html

"""
python中采用PEP8代码规范, PEP8值的是Python增强建议书, 8指的是第8版
1. 每个import语句只导入一个模块, 尽量避免一次导入多个模块.
2. 不要在行尾添加分号";", 也不要用分号将两条命令放在同一行.
3. 建议每行不超过80个字符.
4. 使用必要的空行可以添加代码的可读性,我们在顶级定义之前空两行,顶级定义:函数的定义,类的定义空两行. 在方法定义前面空一行.
5. 运算符两侧,函数参数之间,都好","两侧建议使用空格进行分隔.
6. 避免在循环找中使用+和+=运算符累加字符串.
7. 适当的使用异常处理结构提高程序容错性
8. 模块名尽量短小, 并且使用全部小写字符, 可以使用下换线分隔多个字母.
9. 包名尽量短小,并且使用全部小写字母.
10. 类名采用单词首字母大写格式(即Pascal风格).
11. 模块内部的类由"_"+Pscal风格的类名组成.
12. 函数, 类的属性和方法名全部采用小写字母, 多个字母间采用"_"分隔
13. 常量命名时采用全部大写字母, 可以使用下划线.
14. 使用双下划线"__"开头的实例变量或方法是类私有的.
"""

# 1. 每个import语句只导入一个模块，尽量避免一次导入多个模块
import sys

# 2. 不要在行尾添加分号“；”，也不要用分号将两条命令放在一行
print("输出内容")

# 3. 每行不要超过80个字符
print("测试输出测试输出测试输出测试输出测试输出测试输出测试输出测试输出测试输出测试输出测试输出测试输出测试输出测试输出测试输出测试输出\
测试输出测试输出测试输出测试输出测试输出测试输出测试输出测试输出测试输出测试输出测试输出测试输出测试输出")

# 字符串太长, 想换行
# 法1:  就在想换行的字符前面加上"\"
x = "我一直认为我是一直蜗牛. 我一直在爬, 也许还没有到达金字塔的顶端. 但是只要你爬, 就足以留给自己留下令生命感动的日子."
print(x)
y = "我一直认为我是一直蜗牛. 我一直在爬, 也许还没有到达金字塔的顶端. \
但是只要你爬, 就足以留给自己留下令生命感动的日子."
print(y)

# 法2:  加入()
z = ("我一直认为我是一直蜗牛. 我一直在爬, 也许还没有到达金字塔的顶端."
     " 但是只要你爬, 就足以留给自己留下令生命感动的日子.")
print(z)

# 语句字符超过80个字符, 还是引用()换行
bmi = 0
if bmi >= 18.5 and (
        bmi < 24.9):
    print("正常分为,注意保持(-_-)")

# 语句超出
num = 2
if num == 1 or num == 2 or num == 2 or num == 2 or num == 2 or num == 2 or num == 2 or num == 2 or num == 2 or (
        num == 2 or num == 2 or num == 2 or num == 2 or num == 2 or num == 2 or num == 2 or num == 2):
    # 4. 代码缩进，使用4个空格
    print("在操作符之后，添加()")

# 5. 空行：函数或类的定义之间空2行，方法之间空1行

# 6. 运算符两侧、函数参数之间、逗号两侧使用空格进行分割
num = 2

# 7， 避免在循环中使用+和+=运算符累加字符串

# 8. 逗号、冒号、分号前不要加空格。


# 命名规则：模块名使用小写字母和下划线分割： base_demo
#
# 包名全部使用小写字符: com.pgl
#
# 类名使用首字母大写驼峰形式：UserInfo
#
# 模块内部类用_首字母大写驼峰形式：_UserInfo
#
# 函数、类的属性和方法名全部用小写字符，用_分割：user_name
#
# 常量命名全部使用大写字母，用_分割：USER_NAME
#
# 使用单下划线_开头的模块变量或函数是受保护的。
#
# 使用双下划线__开头的变量或方法是类私有的。
