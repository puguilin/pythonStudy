# !/usr/bin/python3
# _*_ coding:utf-8 _*_
#
# Copyright (C) 2023 - 2023 pgl, Inc. All Rights Reserved 
#
# @Time    : 2023/2/20 17:13
# @Author  : pgl
# @File    : 10_添加,修改和删除列表元素.py.py
# @IDE     : PyCharm


# 添加,修改和删除列表元素(也就是更新元素)

# 1.列表添加元素 注意:
# 1.1 list.append(元素/列表),           这种方法添加的元素会直接添加到列表的末尾 append()中的值可以是列表也可以是普通元素 【在原本的列表中追加元素】
# 1.2 list.insert(下标值, 元素/列表)     在下标处插入元素，不覆盖原本的数据，原数据向后顺延。 插入的数据可以是元素也可以为列表。
# 1.3 list.extend(列表)，               中的值只能是列表/元组[一个可迭代对象]，不能是元素。 在列表的末尾一次性追加另外一个列表中的多个值

# 2.修改列表
# list[序号] = "值"   修改列表的元素:首先通过索引获取到这个元素,然后在为它重新赋值就行

# 3.删除 移除
# 3.1 list.remove(元素) 根据元素的值进行删除, 这种删除不需要知道元素的具体位置
#        移除列表中的某个元素第一个匹配结果（若果列表中有两个值相同的话 移除第一个匹配的元素）
# 3.2 del list[索引号] 根据索引删除,必须知道元素的位置, 如果不知道元素的位置就不能通过索引进行删除

# 3.3  list.pop() 或者 list.pop(下标值) 移除列表中指定下标处的元素( list.pop() 默认移除最后一个元素)，并返回移除的数据。

# 3.4 list.clear()  清除列表中所有的元素数据

# 列表1.1 append(新元素) = [列表1, 新元素]
phone = ["摩托罗拉", "诺基亚", "三星", "OPPO"]  # 定义了一个字符串类型的列表
print("len()看一下列表的长度 " + len(phone))  # len()看一下列表的长度
phone.append("华为")  # 新添加的元素
print("append 方法新添加的元素 " + phone + "append 添加之后列表的长度" + len(phone))  # 输出打印看一看新的列表

# 1.2 insert(列表1, 新元素)  方法可以向列表指定位置添加元素, insert()方法执行效率没有append()方法执行效率高, 除非必要情况, 不推荐使用
phone = ["摩托罗拉", "诺基亚", "三星", "OPPO"]
# 在第一个元素之前添加一个元素, 索引值为0
phone.insert(0, "没有手机")  # insert(索引值,要添加的位置,"要添加的元素内容")
print("insert()添加元素位置之后的结果: ", phone)
# 在索引值为2的前面添加元素(分析:索引值为2的前面添加, 添加之后这个值的索引值还是2)
phone.insert(2, "我没有手机")
print("在索引值为2的元素前面添加元素的结果: ", phone)

# 1.3 extend() 如何把一个列表中的所有元素全部添加到另外一个列表中呢? 可以使用extend()方法
oldlist = ["乔丹", "贾巴尔", "奥拉朱旺", "巴克利", "姚明"]
newlist = ["基德", "纳什", "希尔"]
# 现在想把newlist列表内容添加到oldlist列表中
oldlist.extend(newlist)
print("extend添加元素方法 添加之后的oldlist列表的内容: ", oldlist)

# 2 修改列表的元素
# 修改列表的元素:首先通过索引获取到这个元素,然后在为它重新赋值就行
list1 = ["长亭外", "古道边", "芳草碧连天"]  # 现在想把"芳草碧连天"换成"一行白鹭上青天",首先要通过索引获取到"芳草碧连天"
list1[2] = "一行白鹭上青天"  # 通过索引获取到这个元素,然后在为它重新赋值就行
print("list1[序号] 修改列表后的结果:", list1)


# 3  列表的 删除移除元素
#  3.1 通过 del list[序号] 删除元素
list2 = ["周一", "周二", "周三", "周四"]  # 现在想删掉"周四"这个元素, "周四"这个元素的索引值为3
del list2[3]  # 根据索引删除(使用del语句) del 要删除的列表[删除元素的索引值]
print(" 删除 通过del list[序号] 删除列表元素:", list2)
# 如果列表太长, 从正数数太麻烦, 也可以使用负数的索引, 使用负数的索引就是从右往左数, -1,-2,...
del list2[-1]
print("通过del list[负序号] 删除元素负数索引进行删除的效果:", list2)  # 这里的输出结果也会把"周三"删除, 因为在上面的删除中, 周四已经被删除, 在删除索引值为-1 的元素就是删除"周三"

# 3.2  remove()方法 不知道元素位置(也就是不知道元素的索引值)进行删除
list3 = ["中国", "美国", "俄罗斯", "英国", "法国"]
# 不通过索引,直接删除, 使用remove()方法
list3.remove("美国")
print("通过remove方法进行删除: ", list3)

# 3.3 pop() 移除元素
listpop= [1, [2, 4, 8], 0, 2, 3]
listpop.pop()
print("通过 pop() 默认方法 移除元素 默认移除最后一个元素  " + listpop)
listpop.pop(2)
print(" pop(2) 移除元素 移除指定序列的元素  " + listpop)

# 3.4 list.clear()  清除列表中所有的元素数据
listclear = [1, 2, 3]
listclear.clear()
print("list.clear()  清除列表中所有的元素数据 " + listclear)

# 下面是结合if语句自己写着玩的
list4 = ["数分", "高代", "概率论", "线性回归", "多元统计"]
if "英语" in list4:
    list4.remove("英语")
else:
    list4.remove("多元统计")
print("试着玩的结果:", list4)
